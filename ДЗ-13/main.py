# Модуль 5. Файлы.
# Тема: Файлы. Часть 2

# Задание 1
# Напишите информационную систему «Сотрудники».
# Программа должна обеспечивать ввод данных, редактирование данных сотрудника, удаление сотрудника, поиск
# сотрудника по фамилии, вывод информации обо всех
# сотрудниках, указанного возраста, или фамилия которых
# начинается на указанную букву. Организуйте возможность
# сохранения найденной информации в файл. Также весь
# список сотрудников сохраняется в файл (при выходе из
# программы — автоматически, в процессе исполнения
# программы — по команде пользователя). При старте
# программы происходит загрузка списка сотрудников из
# указанного пользователем файла.

import pprint

print('\n======= Программа "Сотрудники" =======',
      '\n\nПрограмма обеспечивает ввод данных, редактированние данных сотрудника,'
      ' удаление сотрудника,\nпоиск сотрудника по фамилии, а также '
      'вывод информации обо всех сотрудниках,\nуказанного возраста, или фамилия '
      'которых начинается на указанную букву.\n'
      '\nВесь список сотрудников сохраняется в файл (при выходе - автоматически).'
      '\nВ процессе исполения программы можете также сохранить по своему желанию.'
      '\nПри старте программы происходит загрузка списка сотрудников из указанного пользователя файла.')

file_choose = input('\n======= ВВЕДИТЕ ФАЙЛ, с которым будете работать (изначальный - main_file.txt).'
                    '\n======= Произойдет загрузка списка сотрудников: ')

# Читаю данные из файла
d = {}
with open(file=file_choose, encoding='UTF-8') as file:
    for line in file:
        key, *value = line.split()
        d[key] = value
print('\n======= Изначальные данные =======\n')
pprint.pprint(d)

# ============================================================================================================
# ============================ ЗАПАСНЫЕ ДАННЫЕ НАХОДЯТСЯ В all_names_and_age =================================
# ============================================================================================================

while True:
    print('\n======= Основные команды =======', '\n1 - Ввести нового сотрудника.'
                                                '\n2 - Редактировать информацию о сотруднике.'
                                                '\n3 - Удаление сотрудника.'
                                                '\n4 - Поиск сотрудника по фамилии.'
                                                '\n5 - Вывод информации обо всех сотрудниках '
                                                'указанного возраста.'
                                                '\n6 - Сохранение.'
                                                '\n7 - Выход (автоматическое сохранение).')
    choose_inside_while = int(input('\n======= Ваше действие? Просто введите цифру: '))
    if choose_inside_while == 1:
        add_new_surname = input('\nВведите фамилию сотрудника. После фамилии поставьте запятую (Прим. Цыпленков,): ')
        add_new_age = input('Введите возраст сотрудника: ')
        # Добавляю новый элемент. Запятая нужна так как у меня все файлы читаются только с запятой.
        # Решения не нашел, увы
        d[add_new_surname] = add_new_age.split()
        pprint.pprint(d)
    elif choose_inside_while == 2:
        change_info_find = input('\nКакого сотрудника найти для изменения? Копируйте с запятой: ')
        change_info_age = input('\nЕго новый возраст?: ')
        # Если вы спросите меня, почему я после change_info_age и add_new_age ставлю split()
        # то ответ прост - я так сделал в строчке 31, где читаю данные из файла и там у меня тоже split()
        # поэтому у меня тут везде списки, это фича
        d[change_info_find] = change_info_age.split()
        pprint.pprint(d)
    elif choose_inside_while == 3:
        delete_person_find = input('\nВведите фамилию сотрудника для удаления. Копируйте с запятой: ')
        d.pop(delete_person_find)
        pprint.pprint(d)
    elif choose_inside_while == 4:
        find_person = input('\nВведите фамилию полностью или же часть от фамилии, найдется всё: ')
        # Тут просто вывел всю инфу и ключ, обозначения которого попались в input, а count просто выводит их в
        # последовательном порядке
        count = 0
        for i in d:
            if find_person in i:
                print(list(d.items())[count])
                count += 1
            else:
                count += 1
    elif choose_inside_while == 5:
        find_person_age = int(input('\nВведите возраст, по которому вы хотите найти людей: '))
        count = 0
        for i in d:
            # Преобразую значение словаря в просто число и сравниваю с изначальным значением,
            # затем вывожу ключ со значением если подошло
            num_transfer = d.get(i)
            num_transfer = int(''.join(map(str, num_transfer)))
            if find_person_age == num_transfer:
                print(list(d.items())[count])
                count += 1
            else:
                count += 1
    elif choose_inside_while == 6:
        # ================================================ ОТ МЕНЯ ==========================================
        # Короче единственная проблема - то, что у меня не сохраняются данные также, как нужно изначально с одной
        # запятой и без тысячи скобок при каждом сохранении. Я не знаю как это исправить, смотрел другие
        # методы сохранения в текстовом формате - но json увы мне не помог (или я просто
        # неправильно понял как пользоваться). А всё остальное работает замечательно
        # ====================================================================================================
        print('\nСейчас произойдет сохранение ваших значений.')
        file = open(file='main_file.txt', mode='w', encoding='UTF-8')
        for key, value in d.items():
            file.write(f'{key}, {value}\n')
        file.close()
        print('\n======= Изменения сохранены =======')
    elif choose_inside_while == 7:
        # ====== Аналогично верхнему ======
        print('\nПрограмма завершается\n')
        file = open(file='main_file.txt', mode='w', encoding='UTF-8')
        for key, value in d.items():
          file.write(f'{key}, {value}\n')
        file.close()
        print('======= Изменения сохранены =======')
        break

# ====== Это я для себя сохранял ======

# ======= ПРЕОБРАЗОВАНИЕ В ЧИСЛО =======
# test = d.get(i)
# print(int(''.join(map(str, test))))

# ======= РАБОТАЮЩИЙ ВАРИАНТ ЗАПИСИ (перезаписи) СЛОВАРЯ В ФАЙЛ =======
# a = {'One': 1, 'Two': 2}
# file = open('main_file.txt', 'w')
# for key, value in a.items():
#   file.write(f'{key}, {value}\n')
# file.close()

# ВАРИАНТ 2
# import json
# a = {"1": 2}
# open("a.txt", "w").write(json.dumps(a))

# ======= РАБОТАЮЩИЙ ВАРИАНТ ЧТЕНИЯ ИЗ ФАЙЛА В ВИДЕ СЛОВАРЯ=======
# d = {}
# with open(file="main_file.txt", encoding='UTF-8') as file:
#     for line in file:
#         key, *value = line.split()
#         d[key] = value
# print(d)


